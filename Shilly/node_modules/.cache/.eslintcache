[{"/Users/tiff/Desktop/Shilly/Shilly/src/index.js":"1","/Users/tiff/Desktop/Shilly/Shilly/src/App.js":"2","/Users/tiff/Desktop/Shilly/Shilly/src/reportWebVitals.js":"3","/Users/tiff/Desktop/Shilly/Shilly/src/components/Footer.jsx":"4","/Users/tiff/Desktop/Shilly/Shilly/src/pages/StyleGuide.jsx":"5","/Users/tiff/Desktop/Shilly/Shilly/src/components/NavBar.jsx":"6","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/Signup.jsx":"7","/Users/tiff/Desktop/Shilly/Shilly/src/pages/ExplorePage.jsx":"8","/Users/tiff/Desktop/Shilly/Shilly/src/pages/ProfilePage/ProfilePage.jsx":"9","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LandingPage/LandingPage.jsx":"10","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/Login.jsx":"11","/Users/tiff/Desktop/Shilly/Shilly/src/components/Button.jsx":"12","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LandingPage/LandingPageFeaturedTokens.jsx":"13","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LandingPage/LandingPageFeaturedShillers.jsx":"14","/Users/tiff/Desktop/Shilly/Shilly/src/components/ReviewCard.jsx":"15","/Users/tiff/Desktop/Shilly/Shilly/src/components/Card.jsx":"16","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/ForgotPassword.jsx":"17","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/ResetPassword.jsx":"18","/Users/tiff/Desktop/Shilly/Shilly/src/components/Tabs.jsx":"19","/Users/tiff/Desktop/Shilly/Shilly/src/pages/AboutPage.jsx":"20","/Users/tiff/Desktop/Shilly/Shilly/src/routing/PrivateRoute.js":"21","/Users/tiff/Desktop/Shilly/Shilly/src/pages/ProfilePage/EditProfile.jsx":"22"},{"size":583,"mtime":1628833340588,"results":"23","hashOfConfig":"24"},{"size":2381,"mtime":1637130218952,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1627892210388,"results":"26","hashOfConfig":"24"},{"size":1172,"mtime":1628576608622,"results":"27","hashOfConfig":"24"},{"size":5453,"mtime":1628699271637,"results":"28","hashOfConfig":"24"},{"size":8957,"mtime":1637130218952,"results":"29","hashOfConfig":"24"},{"size":18150,"mtime":1637130218953,"results":"30","hashOfConfig":"24"},{"size":7510,"mtime":1632031357204,"results":"31","hashOfConfig":"24"},{"size":13080,"mtime":1637131703581,"results":"32","hashOfConfig":"24"},{"size":5859,"mtime":1632031357204,"results":"33","hashOfConfig":"24"},{"size":4978,"mtime":1637130218953,"results":"34","hashOfConfig":"24"},{"size":1727,"mtime":1632031357202,"results":"35","hashOfConfig":"24"},{"size":1080,"mtime":1628165860676,"results":"36","hashOfConfig":"37"},{"size":1669,"mtime":1630347937836,"results":"38","hashOfConfig":"24"},{"size":3316,"mtime":1628699271636,"results":"39","hashOfConfig":"24"},{"size":5097,"mtime":1632031357202,"results":"40","hashOfConfig":"24"},{"size":4620,"mtime":1630347937836,"results":"41","hashOfConfig":"24"},{"size":4625,"mtime":1630347937836,"results":"42","hashOfConfig":"24"},{"size":2172,"mtime":1630347937834,"results":"43","hashOfConfig":"24"},{"size":995,"mtime":1630773345549,"results":"44","hashOfConfig":"24"},{"size":441,"mtime":1630347937837,"results":"45","hashOfConfig":"24"},{"size":28925,"mtime":1637130218953,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"ynrx9z",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"117u8ty",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"/Users/tiff/Desktop/Shilly/Shilly/src/index.js",[],["97","98"],"/Users/tiff/Desktop/Shilly/Shilly/src/App.js",[],"/Users/tiff/Desktop/Shilly/Shilly/src/reportWebVitals.js",[],"/Users/tiff/Desktop/Shilly/Shilly/src/components/Footer.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/StyleGuide.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/components/NavBar.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/Signup.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/ExplorePage.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/ProfilePage/ProfilePage.jsx",["99","100"],"import { Row, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport Button from \"../../components/Button\";\nimport ReviewCard from \"../../components/ReviewCard\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router';\nimport axios from \"axios\";\nimport placeholderDp from '../../images/placeholderDp.png';\n\nconst instagramLink = 'https://instagram.com/';\nconst twitterLink = 'https://twitter.com/';\nconst tiktokLink = 'https://tiktok.com/@';\n\nconst formatLink = (link) => {\n    return link.includes('https://') ? link.replace('https://', '') : link;\n}\n\nconst fakeShiller = {\n    averagePrice: '10',\n    likes: '23',\n    averageRating: '4.2',\n    bio: 'Blockchain Educator | University Instructor| Co-Founder at Blocknia | Content Creator',\n    about: `Currently I have the following 3 main focuses:\n\n    - I educate people on Social Media about Blockchain Technology & Cryptocurrencies in both English and Spanish.\n    - I teach at the University of Nicosia, providing the first Spanish Online Course about Bitcoin, Blockchain and Cryptocurrencies.\n    - I create Educational Content for Crypto companies in two forms: 1) through collaborations with my youtube channels, and 2) for their own Social Media as well.\n    \n    Specialties: Cryptocurrencies, Bitcoin, Open Blockchains, Social Media, Communication & Education.`,\n    website: 'https://KANYEWEST.COM',\n    instagram: 'kanyewest',\n    twitter: 'kanyewest',\n    tiktok: '',\n    youtubeLink: 'https://www.youtube.com/channel/UCs6eXM7s8Vl5WcECcRHc2qQ',\n    telegramLink: '',\n}\n\n\nfunction ProfilePage(props) {\n    const [user, setUser] = useState({user: null});\n    const [liked, setLiked] = useState(false);\n    const [likesArr, setLikesArr] = useState([]);\n\n    const { match } = props;\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    var viewingOwnProfile = currentUser && (match.params.username === currentUser.username);\n    var viewingOtherProfile = !currentUser || (match.params.username !== currentUser.username);\n\n    let history = useHistory();\n\n    const editProfileRedirect = () => {\n        history.push('/editprofile', { from: \"ProfilePage\" })\n    }\n\n    useEffect(() => {\n        async function f() {\n            try {\n                if (viewingOtherProfile) {\n                    const data = await axios.get(\n                        `${process.env.REACT_APP_SERVER_URI}/api/user/getUserByUsername`, \n                        { params: {username: match.params.username } });\n                    if (data.data.success) {\n                        setUser({user: { ...data.data.user }});\n                        var likeeId = {...data.data.user}._id;\n                        var likerId = currentUser._id;\n                        var ids = {likeeId: likeeId, likerId: likerId};\n                \n                        const hasLikedData = await axios.post(\n                            `${process.env.REACT_APP_SERVER_URI}/api/user/hasLiked`,\n                            ids,            \n                        );\n                        if (hasLikedData.data.success) {\n                            setLiked(hasLikedData.data.data);\n                        }\n                    }\n                } else if (viewingOwnProfile) {\n                    const data = await axios.get(\n                        `${process.env.REACT_APP_SERVER_URI}/api/user/getUserByUsername`, \n                        { params: {username: currentUser.username } });\n                    if (data.data.success) {\n                        setUser({user: { ...data.data.user }});\n                    }\n                }\n\n            } catch (error) {\n                console.log(\"HOLHOLHO\", error)\n            }\n        }\n        f();\n    },  [viewingOtherProfile, viewingOwnProfile, match.params.username, currentUser, user.user]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    const handleLike = async () => {\n        try {\n            if (viewingOtherProfile) {\n                const config = { header: { \"Content-Type\": \"application/json\" }};\n\n                var likeeId = user.user._id;\n                var likerId = currentUser._id;\n                var ids = {likeeId: likeeId, likerId: likerId};\n\n                if (liked) {\n                    const { data } = await axios.post(`${process.env.REACT_APP_SERVER_URI}/api/user/unlike`, ids, config);\n                    if (data.success) {\n                        setLiked(false);\n                    }\n                } else {\n                    const { data } = await axios.post(`${process.env.REACT_APP_SERVER_URI}/api/user/like`, ids, config);\n                    if (data.success) {\n                        setLiked(true);\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <PageWrap>\n            {user.user && <Row>\n                <Col md={4}>                    \n                    {ProfileBasicInfo(user.user, viewingOwnProfile, handleLike, liked, editProfileRedirect)}\n                </Col>\n                <Col md={8}>\n                    <div style={{ display: \"grid\", gap: '64px' }}>\n                        <div style={{ whiteSpace: 'pre-wrap' }}>\n                            <SectionHeader>About</SectionHeader>\n                            {user.user ? user.user.about : null}\n                        </div>\n\n                        {/* {viewingOwnProfile && <div>\n                            <SectionHeader>Likes</SectionHeader>\n                            { user.user.likes.length > 0 ? LikesSection(user.user.likes) : \"You don't like anyone....\"}\n                        </div>} */}\n\n                        <SectionHeader>Completed Collabs</SectionHeader>\n                        <SectionHeader>Ongoing Collabs</SectionHeader>\n\n                        <div>\n                            <SectionHeader>Reviews as Shiller</SectionHeader>\n                            <div style={{ display: 'grid', gap: '8px' }}>\n                                <ReviewCard />\n                                <ReviewCard />\n                                <ReviewCard />\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n            </Row>}\n        </PageWrap>\n    );\n}\n\nconst ProfileBasicInfo = (user, isViewingOwnProfile, handleLike, liked, editProfileRedirect) => {\n    return (\n        <div style={{ display: 'grid', gap: '32px', textAlign: 'start' }}>\n            {user && <>\n                <img src={user.profileImage ? user.profileImage : placeholderDp} alt=\"\" style={{ width: '200px', height: '200px', borderRadius: 'var(--br-round', objectFit: 'cover' }} />\n                <div>\n                    <h2>{user.name}</h2>\n                    <h3 style={{ color: 'var(--base-50)' }}>@{user.username}</h3>\n                </div>\n                <div style={{ display: 'flex', width: '80%', justifyContent: 'space-between' }}>\n                    <div>\n                        <h3>S${fakeShiller.averagePrice}</h3>\n                        <SecTitle>Average Price</SecTitle>\n                    </div>\n                    <div>\n                        <div style={{ display: 'flex' }}>\n                            <box-icon name='star' type='solid' color=\"var(--accent-warning)\" style={{ marginRight: '8px' }}></box-icon>\n                            <h3>{fakeShiller.averageRating}</h3>\n                        </div>\n                        <SecTitle>Average Rating</SecTitle>\n                    </div>\n                    <div>\n                        <h3>{user.likes.length}</h3>\n                        <SecTitle>Likes</SecTitle>\n                    </div>\n                </div>\n\n                <div>\n                    {isViewingOwnProfile\n                        ? <Button variant='tertiary' onClick={editProfileRedirect}>\n                            Edit Profile\n                        </Button>\n                        : <div style={{ display: 'flex', flexDirection: 'row' }}>\n                            <Button variant='primary' style={{ marginRight: '16px' }}>\n                                <box-icon\n                                    type='solid'\n                                    name='message-rounded'\n                                    color=\"var(--base-10)\"\n                                    style={{ marginRight: '10px' }}\n                                ></box-icon>\n                                Chat\n                            </Button>\n                            <Button variant='secondary' onClick={handleLike} style={{backgroundColor: liked ? 'var(--accent-pink-a10)' : 'var(--base-20)' }}>\n                                <box-icon name='heart' type='solid' style={{marginRight: '10px'}} color={liked ? 'var(--accent-pink)' : 'var(--base-100)'}></box-icon>\n                                {liked ? 'Liked' : 'Like'}\n                            </Button>\n\n                        </div>\n                    }\n                </div>\n                <UserInfoSection>\n                    <h3 className=\"header\">Bio</h3>\n                    {user.bio}\n                    {user.location && <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <box-icon name='map' type='regular' style={{ marginRight: '8px' }}></box-icon>\n                        <span>{user.location}</span>\n                    </div>}\n                </UserInfoSection>\n                {((user.website && user.website !== \"https://\") || (user.instagramUsername) || user.twitterUsername ||\n                    user.tiktokUsername || (user.telegramChannelLink && user.telegramChannelLink !== \"https://\") ||\n                    (user.youtubeLink && user.youtubeLink !== \"https://\")) &&\n                    <UserInfoSection className=\"mb-4\">\n                        <h3 className=\"header\">Links</h3>\n\n                        {user.website && user.website !== \"https://\" &&\n                            <SocialMediaLink>\n                                <box-icon name=\"globe\"></box-icon>\n                                <h4><a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{formatLink(user.website)}</a></h4>\n                            </SocialMediaLink>}\n                        {user.instagramUsername &&\n                            <SocialMediaLink>\n                                <box-icon type='logo' name='instagram'></box-icon>\n                                <h4><a href={instagramLink + user.instagramUsername} target=\"_blank\" rel=\"noopener noreferrer\">{user.instagramUsername}</a></h4>\n                            </SocialMediaLink>}\n                        {user.twitterUsername &&\n                            <SocialMediaLink>\n                                <box-icon type='logo' name='twitter'></box-icon>\n                                <h4><a href={twitterLink + user.twitterUsername} target=\"_blank\" rel=\"noopener noreferrer\">{user.twitterUsername}</a></h4>\n                            </SocialMediaLink>}\n                        {user.tiktokUsername &&\n                            <SocialMediaLink>\n                                <box-icon name='tiktok' type='logo' ></box-icon>\n                                <h4><a href={tiktokLink + user.tiktokUsername} target=\"_blank\" rel=\"noopener noreferrer\">{user.tiktokUsername}</a></h4>\n                            </SocialMediaLink>}\n                        {user.telegramChannelLink && user.telegramChannelLink !== \"https://\" &&\n                            <SocialMediaLink>\n                                <box-icon name='telegram' type='logo' ></box-icon>\n                                <h4><a href={user.telegramChannelLink} target=\"_blank\" rel=\"noopener noreferrer\">{formatLink(user.telegramChannelLink)}</a></h4>\n                            </SocialMediaLink>}\n                        {user.youtubeLink && user.youtubeLink !== \"https://\" &&\n                            <SocialMediaLink>\n                                <box-icon type=\"logo\" name='youtube'></box-icon>\n                                <h4><a href={user.youtubeLink} target=\"_blank\" rel=\"noopener noreferrer\">{formatLink(user.youtubeLink)}</a></h4>\n                            </SocialMediaLink>}\n                    </UserInfoSection>}\n            </>}\n        </div>\n    );\n}\n\n\nconst PageWrap = styled.div`\n    max-width: 1200px;\n    margin: auto;\n    padding: 60px 20px;\n    text-align: start;\n`;\n\nconst SectionHeader = styled.h3`\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n    border-bottom: 1px solid var(--base-20);\n`;\n\nconst SecTitle = styled.span`\n    font-size: var(--fs-b3);\n    font-weight: bold;\n    color: var(--base-50);\n`;\n\nconst UserInfoSection = styled.div`\n    display: grid;\n    gap: 16px;\n\n    & .header {\n        padding-bottom: 16px;\n        border-bottom: 1px solid var(--base-20);\n    }\n`;\n\nconst SocialMediaLink = styled.div`\n    display: grid;\n    grid-auto-flow: column;\n    gap: 16px;\n    align-items: center;\n    justify-content: start;\n    text-align: start;\n`;\n\nexport default ProfilePage;","/Users/tiff/Desktop/Shilly/Shilly/src/pages/LandingPage/LandingPage.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/Login.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/components/Button.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/LandingPage/LandingPageFeaturedTokens.jsx",[],["101","102"],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/LandingPage/LandingPageFeaturedShillers.jsx",["103"],"import axios from 'axios';\nimport { Row, Col } from 'react-bootstrap'\nimport { Component } from 'react';\nimport Card from '../../components/Card';\n\nexport default class LandingPageFeaturedShillers extends Component {\n    getShillersLink = \"http://localhost:5000/shiller/\";\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = { shillers: [] };\n    // }\n\n    // componentDidMount() {\n    //     axios\n    //         .get(`${process.env.REACT_APP_SERVER_URI}/api/auth/getUsers`)\n    //         .then((response) => {\n    //             console.log(response.data)\n    //             var newData = JSON.parse(response.data)\n    //             this.setState({ shillers: newData })\n    //         })\n    //         .catch(function (error) { \n    //             console.log(error);\n    //         });\n    // }\n    shillers = [\n        { _id: 0, name: 'Britney Spears', username: '@bspears'},\n        { _id: 1, name: 'Donald Trump', username: '@bspears'},\n        { _id: 2, name: 'Elon Musk', username: '@bspears'},\n        { _id: 3, name: 'Oprah Winfrey', username: '@bspears'},\n        { _id: 4, name: 'Tom Tan', username: '@bspears'},\n        { _id: 5, name: 'Bob Ban', username: '@bspears'},\n    ];\n\n    shillerCards() {\n        return this.shillers.map((shiller) => {\n            return (\n                <Col key={shiller._id} sm={6} md={4} lg={3}>\n                    <Card \n                        shiller={shiller}\n                    />\n                </Col>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <Row style={{width: '100%'}}>\n                {this.shillerCards()}\n            </Row>\n        );\n    }\n}",["104","105"],"/Users/tiff/Desktop/Shilly/Shilly/src/components/ReviewCard.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/components/Card.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/ForgotPassword.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/LoginSignup/ResetPassword.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/components/Tabs.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/AboutPage.jsx",[],"/Users/tiff/Desktop/Shilly/Shilly/src/routing/PrivateRoute.js",[],"/Users/tiff/Desktop/Shilly/Shilly/src/pages/ProfilePage/EditProfile.jsx",["106","107","108","109"],"import { Row, Col, Spinner } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport Button from '../../components/Button';\n\nfunction EditProfile(props) {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n    const [user, setUser] = useState(currentUser);\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [location, setLocation] = useState('');\n    const [bio, setBio] = useState('');\n    const [about, setAbout] = useState('');\n    const [website, setWebsite] = useState('');\n    const [instagramUsername, setInstagramUsername] = useState('');\n    const [twitterUsername, setTwitterUsername] = useState('');\n    const [tiktokUsername, setTiktokUsername] = useState('');\n    const [telegramChannelLink, setTelegramChannelLink] = useState('');\n    const [youtubeLink, setYoutubeLink] = useState('');\n    const [profileImg, setProfileImg] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [imgLoading, setImgLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [takenUsername, setTakenUsername] = useState(false);\n\n    const [profileImgError, setProfileImgError] = useState(\"\");\n\n\n    let history = useHistory();\n\n    useEffect(async () => {\n        if (currentUser == null) {\n            history.push('/');\n        } else {\n            setName(user['name']);\n            setUsername(user['username']);\n            setLocation(user['location']);\n            user['bio'] == null ? setBio('') : setBio(user['bio']);\n            user['about'] == null ? setAbout('') : setAbout(user['about']);\n            user['website'] == null ? setWebsite('') : setWebsite(user['website']);\n            user['instagramUsername'] == null ? setInstagramUsername('') : setInstagramUsername(user['instagramUsername']);\n            user['twitterUsername'] == null ? setTwitterUsername('') : setTwitterUsername(user['twitterUsername']);\n            user['tiktokUsername'] == null ? setTiktokUsername('') : setTiktokUsername(user['tiktokUsername']);\n            user['telegramChannelLink'] == null ? setTelegramChannelLink('') : setTelegramChannelLink(user['telegramChannelLink']);\n            user['youtubeLink'] == null ? setYoutubeLink('') : setYoutubeLink(user['youtubeLink']);\n            user['profileImage'] == null ? setProfileImg('') : setProfileImg(user['profileImage']);\n        }\n    }, [])\n\n    function formatLink(link) {\n        return link.includes('https://') || link.includes('http://') ? link : 'https://' + link;\n    }\n\n    const atInputWrap = {\n        borderTopLeftRadius: '0',\n        borderBottomLeftRadius: '0',\n        borderTopRightRadius: 'var(--br-md)',\n        borderBottomRightRadius: 'var(--br-md)',\n        borderLeft: '0'\n    };\n\n    const updateUser = () => {\n        user['name'] = name;\n        user['username'] = username;\n        user['location'] = location;\n        user['bio'] = bio;\n        user['about'] = about;\n        user['website'] = formatLink(website);\n        user['instagramUsername'] = instagramUsername;\n        user['twitterUsername'] = twitterUsername;\n        user['tiktokUsername'] = tiktokUsername;\n        user['telegramChannelLink'] = formatLink(telegramChannelLink);\n        user['youtubeLink'] = formatLink(youtubeLink);\n        user['profileImage'] = profileImg;\n    }\n\n    const handleUsernameChange = async (username) => {\n        setUsername(username);\n        if (username && username != user['username'])\n            await axios.get(`${process.env.REACT_APP_SERVER_URI}/api/user/getUserByUsername?username=${username}`)\n                .then((res) => {\n                    if (res.data.success) {\n                        console.log('taken')\n                        setTakenUsername(true);\n                    }\n                }).catch((error) => setTakenUsername(false));\n        else {\n            setTakenUsername(false);\n        }\n    }\n\n    const handleFileChange = ({ target }) => {\n        setImgLoading(true);\n        if (target.files.length === 1) {\n            if (target.files[0].size > 10000000) {\n                setProfileImgError(\"What a huge image you have... Please keep it to under 10MB.\");\n            } else {\n                setProfileImgError(\"\");\n                handleImageSubmit(target.files[0]);\n            }\n        } else {\n            setProfileImgError(\"\");\n        }\n    };\n\n    const handleImageSubmit = (fileData) => {\n        const formdata = new FormData();\n\n        formdata.append(\"image\", fileData);\n\n        axios.post(`${process.env.REACT_APP_SERVER_URI}/api/uploadImage/image`, formdata)\n            .then((res) => {\n                if (res.data.success) {\n                    setProfileImg(res.data.imgPath);\n                    setImgLoading(false);\n                }\n            }).catch((error) => {\n                setImgLoading(false);\n                setProfileImgError(error);\n            });\n        //todo: set message.info(error)\n    };\n\n    const updateHandler = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        updateUser();\n\n        const config = { header: { \"Content-Type\": \"application/json\" } };\n\n        try {\n            if (user['role'] === 1) {\n                setUsername(username.toUpperCase());\n            }\n\n            const { data } = await axios.post(\n                `${process.env.REACT_APP_SERVER_URI}/api/user/updateUser`,\n                user,\n                config\n            );\n\n            if (data.success) {\n                localStorage.setItem(\"currentUser\", JSON.stringify(data.user));\n                props.onUpdate(data.user);\n                setLoading(false);\n                history.push(\"/user/\" + data.user.username, []);\n            }\n\n        } catch (error) {\n            setError(error.response.data.error);\n        }\n    };\n\n    return (\n        <div style={{ backgroundColor: 'var(--base-20)', width: '100vw', height: '100%', overflowX: 'hidden' }\n        }>\n            <CardPageWrap>\n                <h1 style={{ margin: '0 auto', maxWidth: '700px', textAlign: 'center', marginTop: '50px' }}>\n                    Edit your profile\n                </h1>\n                <CardWrap>\n                    <Card>\n                        <form onSubmit={updateHandler}>\n                            <div style={{ display: 'grid', gap: '16px' }}>\n                                <Row className=\"align-items-center\">\n                                    <Col md={5} className=\"mb-4 mb-md-0\">\n                                        <h3>Name</h3>\n                                    </Col>\n                                    <Col md={7}>\n                                        <input\n                                            type=\"text\"\n                                            required\n                                            id=\"name\"\n                                            name=\"name\"\n                                            placeholder=\"Add your name\"\n                                            value={name}\n                                            onChange={(e) => setName(e.target.value)}\n                                            tabIndex={1}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"align-items-center\">\n                                    <Col md={5} className=\"mb-4 mb-md-0\">\n                                        <h3>Username</h3>\n                                    </Col>\n                                    <Col md={7} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <AtIconWrap> @ </AtIconWrap>\n                                        <input\n                                            type=\"text\"\n                                            required\n                                            id=\"username\"\n                                            name=\"username\"\n                                            placeholder=\"username\"\n                                            value={username}\n                                            onChange={(e) => handleUsernameChange(e.target.value)}\n                                            tabIndex={2}\n                                            style={atInputWrap}\n                                        />\n                                    </Col>\n                                </Row>\n                                {takenUsername && <p style={{ fontWeight: 'bold', color: 'var(--accent-error)', textAlign: 'end' }}>Username has been taken!</p>}\n                                {!username && <p style={{ fontWeight: 'bold', color: 'var(--accent-error)', textAlign: 'end' }}>Username cannot be empty!</p>}\n\n                                <Row className=\"align-items-center\">\n                                    <Col md={5} className=\"mb-4 mb-md-0\">\n                                        <h3>Location</h3>\n                                    </Col>\n                                    <Col md={7}>\n                                        <input\n                                            type=\"text\"\n                                            required\n                                            id=\"location\"\n                                            name=\"location\"\n                                            placeholder=\"Rio de Janeiro, Brazil\"\n                                            value={location}\n                                            onChange={(e) => setLocation(e.target.value)}\n                                            tabIndex={3}\n                                        />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"align-items-center\">\n                                    <Col md={5} className=\"mb-0\">\n                                        <h3>Add a short bio</h3>\n                                        <p style={{ marginTop: '10px', className: 'fs-b2', color: 'var(--base-50)' }}>\n                                            This is others' first impression of your profile. Make it short and snappy!\n                                        </p>\n                                    </Col>\n                                    <Col md={7} style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <textarea\n                                            type=\"text\"\n                                            id=\"bio\"\n                                            name=\"bio\"\n                                            placeholder=\"Enter a short bio\"\n                                            value={bio}\n                                            onChange={(e) => setBio(e.target.value)}\n                                            maxLength=\"200\"\n                                            rows=\"5\"\n                                            tabIndex={4}\n                                        />\n                                        <p style={{\n                                            alignSelf: 'flex-end',\n                                            justifySelf: 'flex-end',\n                                            fontSize: 'var(--fs-b4)',\n                                            marginTop: '5px',\n                                            marginBottom: '0',\n                                            color: bio.length > 190 ? 'var(--accent-pink-darker)' : 'var(--base-50)',\n                                            fontWeight: bio.length > 190 ? 'bold' : null\n                                        }}>\n                                            {bio.length}/200\n                                        </p>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"align-items-center\">\n                                    <Col md={12}>\n                                        <h3>About you</h3>\n                                        <p style={{ marginTop: '10px', className: 'fs-b2', color: 'var(--base-50)' }}>\n                                            {user['role'] === 0 ? 'Add a longer paragraph telling others more about yourself.'\n                                                : 'Add a longer paragraph telling others more about your token.'}\n                                        </p>\n                                    </Col>\n                                    <Col md={12} className=\"mb-4\">\n                                        <textarea\n                                            type=\"text\"\n                                            id=\"about\"\n                                            name=\"about\"\n                                            placeholder=\"Enter a description\"\n                                            value={about}\n                                            onChange={(e) => setAbout(e.target.value)}\n                                            tabIndex={5}\n                                            rows=\"8\"\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"align-items-center\" style={{ padding: '16px 0px 16px 0px' }}>\n                                    <Col md={7} className=\"mb-4 mb-md-0\">\n                                        <h3>Upload a profile image</h3>\n                                        <p style={{ marginTop: '10px', className: 'fs-b2', color: 'var(--base-50)' }}>\n                                            Recommended: Square image, at least 400x400. File type: JPG, PNG or GIF.\n                                        </p>\n                                    </Col>\n                                    <Col md={5} style={{ display: 'flex', justifyContent: 'center' }}>\n                                        {!imgLoading &&\n                                            <div>\n                                                <UploadFileArea htmlFor={'upload-button'} gotImage={profileImg} style={{ background: profileImg ? `url(${profileImg})` : 'white' }}>\n                                                    {!profileImg && <box-icon name='camera' color='var(--base-30)'></box-icon>}\n                                                </UploadFileArea>\n                                                {profileImg && <RemoveImgButton onClick={() => setProfileImg(null)}>\n                                                    <box-icon name='trash-alt' color='var(--base-10)' ></box-icon>\n                                                </RemoveImgButton>}\n                                                <input\n                                                    id=\"upload-button\"\n                                                    type=\"file\"\n                                                    name=\"file\"\n                                                    accept=\"image/*\"\n                                                    onChange={handleFileChange}\n                                                    placeholder=\"upload image\"\n                                                    style={{ display: 'none' }}\n                                                />\n                                            </div>\n                                        }\n                                        {imgLoading && <Spinner animation=\"border\" style={{ color: 'var(--accent-pink)' }} />}\n                                        {profileImgError && <p style={{ fontWeight: 'bold', color: 'var(--accent-error)', textAlign: 'end' }}>{profileImgError}</p>}\n                                    </Col>\n                                </Row>\n                                <Row className=\"align-items-center\" style={{ padding: '16px 0px 16px 0px' }}>\n                                    <Col md={7} className=\"mb-4 mb-md-0\">\n                                        <h3>Upload a cover image</h3>\n                                        <p style={{ marginTop: '10px', className: 'fs-b2', color: 'var(--base-50)' }}>\n                                            Recommended: Square image, at least 400x400. File type: JPG, PNG or GIF.\n                                        </p>\n                                    </Col>\n                                    <Col md={5} style={{ display: 'flex', justifyContent: 'center' }}>\n                                        <DottedCircle>\n                                            <box-icon name='camera' color='var(--base-30)'></box-icon>\n                                        </DottedCircle>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Row className=\"mb-4\">\n                                        <h3>Social media links</h3>\n                                    </Row>\n                                    <div style={{ display: 'grid', gap: '8px' }}>\n                                        <Row className=\"align-items-center\">\n\n                                            <Col md={5} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '16px' }}>\n                                                <box-icon name=\"globe\"></box-icon>\n                                                <h4>Website</h4>\n                                            </Col>\n                                            <Col md={7} className=\"mb-2 mb-md-0\">\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"website\"\n                                                    name=\"website\"\n                                                    placeholder=\"https://website.com\"\n                                                    value={website}\n                                                    onChange={(e) => setWebsite(e.target.value)}\n                                                    tabIndex={6}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"align-items-center\">\n                                            <Col md={5} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '16px' }}>\n                                                <box-icon type='logo' name='instagram'></box-icon>\n                                                <h4>Instagram</h4>\n                                            </Col>\n                                            <Col md={7} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <AtIconWrap\n                                                >@</AtIconWrap>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"instagram\"\n                                                    name=\"instagram\"\n                                                    placeholder=\"Instagram Username\"\n                                                    value={instagramUsername}\n                                                    onChange={(e) => setInstagramUsername(e.target.value)}\n                                                    tabIndex={7}\n                                                    style={atInputWrap}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"align-items-center\">\n                                            <Col md={5} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '16px' }}>\n                                                <box-icon type='logo' name='twitter'></box-icon>\n                                                <h4>Twitter</h4>\n                                            </Col>\n                                            <Col md={7} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <AtIconWrap\n                                                >@</AtIconWrap>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"twitter\"\n                                                    name=\"twitter\"\n                                                    placeholder=\"Twitter Username\"\n                                                    value={twitterUsername}\n                                                    onChange={(e) => setTwitterUsername(e.target.value)}\n                                                    tabIndex={7}\n                                                    style={atInputWrap}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"align-items-center\">\n                                            <Col md={5} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '16px' }}>\n                                                <box-icon name='tiktok' type='logo' ></box-icon>\n                                                <h4>TikTok</h4>\n                                            </Col>\n                                            <Col md={7} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                                <AtIconWrap>\n                                                    @\n                                                </AtIconWrap>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"tiktok\"\n                                                    name=\"tiktok\"\n                                                    placeholder=\"TikTok Username\"\n                                                    value={tiktokUsername}\n                                                    onChange={(e) => setTiktokUsername(e.target.value)}\n                                                    tabIndex={8}\n                                                    style={atInputWrap}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"align-items-center\">\n                                            <Col md={5} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '16px' }}>\n                                                <box-icon name='telegram' type='logo' ></box-icon>\n                                                <h4>Telegram Channel</h4>\n                                            </Col>\n                                            <Col md={7} className=\"mb-2 mb-md-0\">\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"telegram\"\n                                                    name=\"telegram\"\n                                                    placeholder=\"https://t.me/mychannel\"\n                                                    value={telegramChannelLink}\n                                                    onChange={(e) => setTelegramChannelLink(e.target.value)}\n                                                    tabIndex={9}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"align-items-center\">\n                                            <Col md={5} className=\"mb-2 mb-md-0\" style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '16px' }}>\n                                                <box-icon type=\"logo\" name='youtube'></box-icon>\n                                                <h4>YouTube Channel</h4>\n                                            </Col>\n                                            <Col md={7} className=\"mb-2 mb-md-0\">\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"youtube\"\n                                                    name=\"youtube\"\n                                                    placeholder=\"https://youtube.com/c/mychannel\"\n                                                    value={youtubeLink}\n                                                    onChange={(e) => setYoutubeLink(e.target.value)}\n                                                    tabIndex={10}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Row>\n\n                            </div>\n                            {error && <span>{error}</span>}\n                            <Row style={{ display: 'flex', justifyContent: 'center', marginTop: '48px', gap: '16px' }}>\n                                <Button type=\"submit\" variant='primary' tabIndex={11} loading={loading} disabled={takenUsername}>Save Changes</Button>\n\n                                <CancelButton tabIndex={12} onClick={() => { history.goBack() }}>Cancel</CancelButton>\n                            </Row>\n                        </form>\n                    </Card>\n                </CardWrap>\n            </CardPageWrap>\n        </div >\n    )\n}\n\nconst CardPageWrap = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 24px;\n  overflow-x: hidden;\n`;\n\nconst CardWrap = styled.div`\n  display: grid;\n  margin: 0;\n  gap: 24px;\n  padding: 24px 0;\n\n  @media (min-width: 640px) {\n    padding: 32px 0;\n  }\n\n  @media (min-width: 832px) {\n    padding: 64px 48px;\n  }\n`;\n\nconst Card = styled.div`\n  display: block;\n  padding: 24px;\n  box-shadow: var(--shadow);\n  background-color: var(--base-10);\n  max-width: 700px;\n  border-radius: var(--br-lg);\n\n  @media (min-width: 640px) {\n    padding: 32px;\n  }\n\n  @media (min-width: 832px) {\n    padding: 32px 48px;\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\nconst AtIconWrap = styled.div`\n  box-sizing: border-box;\n  line-height: 290%;\n  background-color: var(--base-20);\n  color: var(--base-40);\n  border: 2px solid var(--base-30);\n  border-right: 0;\n  border-top-left-radius: var(--br-md);\n  border-bottom-left-radius: var(--br-md);\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n\nconst DottedCircle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: 2px dashed var(--base-30);\n  width: 95px;\n  height: 95px;\n  transition: var(--transition);\n  &:hover {\n    border: 2px dashed var(--accent-pink);\n    cursor: pointer;\n  }\n`\n\nconst UploadFileArea = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: var(--br-round);\n  border: ${props => props.gotImage ? 'none' : '2px dashed var(--base-30)'};\n  width: 100px;\n  height: 100px;\n  background-size: cover!important;\n  background-position: center center!important;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transition: var(--transition);\n\n  &:hover {\n    border: ${props => props.gotImage ? 'none' : '2px dashed var(--accent-pink)'};\n  }\n`;\n\nconst RemoveImgButton = styled.div`\n  background-color: var(--accent-error);\n  color: var(--base-10);\n  height: 32px;\n  width: 32px;\n  border-radius: var(--br-round);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  left: 34px;\n  bottom: 16px;\n  border: 2px solid var(--base-10);\n  cursor: pointer;\n  transition: var(--transition);\n\n  &:hover {\n    background-color: var(--accent-error-lighter);\n  }\n`;\n\nconst CancelButton = styled.h4`\n  text-align: center;\n  color: var(--base-50);\n  cursor: pointer;\n  transition: var(--transition);\n  &:hover {\n      color: var(--base-80);\n  }\n`\n\n\nexport default EditProfile;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":42,"column":12,"nodeType":"116","messageId":"117","endLine":42,"endColumn":20},{"ruleId":"114","severity":1,"message":"118","line":42,"column":22,"nodeType":"116","messageId":"117","endLine":42,"endColumn":33},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","severity":1,"message":"121","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"110","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","severity":1,"message":"124","line":11,"column":18,"nodeType":"116","messageId":"117","endLine":11,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":34,"column":15,"nodeType":"127","endLine":51,"endColumn":6},{"ruleId":"125","severity":1,"message":"128","line":51,"column":8,"nodeType":"129","endLine":51,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":82,"column":34,"nodeType":"133","messageId":"134","endLine":82,"endColumn":36},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'likesArr' is assigned a value but never used.","Identifier","unusedVar","'setLikesArr' is assigned a value but never used.",["135"],["136"],"'axios' is defined but never used.",["135"],["136"],"'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'currentUser', 'history', and 'user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setName' needs the current value of 'user'.","ArrayExpression",["137"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [currentUser, history, user]",{"range":"140","text":"141"},[2536,2538],"[currentUser, history, user]"]