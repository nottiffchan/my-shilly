{"ast":null,"code":"var _jsxFileName = \"/Users/tiff/Desktop/sponsee/Shilly/Shilly/src/components/Button.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  children,\n  onClick,\n  btnColor = 'teal',\n  labelColor,\n  disabled,\n  type,\n  style,\n  ...props\n}) => {\n  _s();\n\n  const [hover, setHover] = useState(false);\n\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n\n  const commonStyles = {\n    backgroundColor: btnColor,\n    color: labelColor || 'white'\n  };\n  const outlineStyles = {\n    border: `1px solid ${btnColor}`,\n    color: btnColor,\n    backgroundColor: 'white'\n  };\n  const outlineHoverStyle = {\n    color: labelColor || 'white',\n    backgroundColor: btnColor\n  };\n  const roundedStyle = {\n    backgroundColor: btnColor,\n    color: labelColor || 'white',\n    borderRadius: '25px'\n  };\n  const disabledStyle = {\n    cursor: 'default',\n    backgroundColor: btnColor,\n    color: labelColor || 'white',\n    opacity: 0.4\n  };\n  const blockStyles = {\n    width: '95%',\n    margin: '0 auto'\n  };\n  let btnStyle;\n\n  switch (type) {\n    case 'rounded':\n      btnStyle = roundedStyle;\n      break;\n\n    case 'block':\n      btnStyle = blockStyles;\n      break;\n\n    case 'outline':\n      if (hover) {\n        btnStyle = outlineHoverStyle;\n      } else {\n        btnStyle = outlineStyles;\n      }\n\n      break;\n\n    default:\n      btnStyle = {\n        backgroundColor: btnColor,\n        color: labelColor || 'white'\n      };\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ShillyButton, {\n    style: disabled ? { ...commonStyles,\n      ...btnStyle,\n      ...disabledStyle,\n      ...style\n    } : { ...commonStyles,\n      ...btnStyle,\n      ...style\n    },\n    o: true,\n    onMouseEnter: toggleHover,\n    onMouseLeave: toggleHover,\n    ...props,\n    type: \"button\",\n    onClick: !disabled ? onClick : () => {},\n    className: styles.btn,\n    children: children || 'button'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Button, \"IQtAqT8dc+fMsc67T3/TfQDLEHI=\");\n\n_c = Button;\nconst ShillyButton = styled.div`\n  font-weight: bold;\n  transition: 200ms ease-out;\n  border-radius: var(--br-lg);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  cursor: pointer;\n  padding: 16px 24px;\n`;\n_c2 = ShillyButton;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ShillyButton\");","map":{"version":3,"sources":["/Users/tiff/Desktop/sponsee/Shilly/Shilly/src/components/Button.jsx"],"names":["React","useState","styled","Button","children","onClick","btnColor","labelColor","disabled","type","style","props","hover","setHover","toggleHover","commonStyles","backgroundColor","color","outlineStyles","border","outlineHoverStyle","roundedStyle","borderRadius","disabledStyle","cursor","opacity","blockStyles","width","margin","btnStyle","styles","btn","ShillyButton","div"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = ({ children, onClick, btnColor = 'teal', labelColor, disabled, type, style, ...props }) => {\n\tconst [\n\t\thover,\n\t\tsetHover\n\t] = useState(false);\n\tconst toggleHover = () => {\n\t\tsetHover(!hover);\n\t};\n\tconst commonStyles = {\n\t\tbackgroundColor : btnColor,\n\t\tcolor           : labelColor || 'white'\n\t};\n\tconst outlineStyles = {\n\t\tborder          : `1px solid ${btnColor}`,\n\t\tcolor           : btnColor,\n\t\tbackgroundColor : 'white'\n\t};\n\tconst outlineHoverStyle = {\n\t\tcolor           : labelColor || 'white',\n\t\tbackgroundColor : btnColor\n\t};\n\n\tconst roundedStyle = {\n\t\tbackgroundColor : btnColor,\n\t\tcolor           : labelColor || 'white',\n\t\tborderRadius    : '25px'\n\t};\n\tconst disabledStyle = {\n\t\tcursor          : 'default',\n\t\tbackgroundColor : btnColor,\n\t\tcolor           : labelColor || 'white',\n\t\topacity         : 0.4\n\t};\n\tconst blockStyles = {\n\t\twidth  : '95%',\n\t\tmargin : '0 auto'\n\t};\n\tlet btnStyle;\n\tswitch (type) {\n\t\tcase 'rounded':\n\t\t\tbtnStyle = roundedStyle;\n\t\t\tbreak;\n\t\tcase 'block':\n\t\t\tbtnStyle = blockStyles;\n\t\t\tbreak;\n\t\tcase 'outline':\n\t\t\tif (hover) {\n\t\t\t\tbtnStyle = outlineHoverStyle;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnStyle = outlineStyles;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbtnStyle = {\n\t\t\t\tbackgroundColor : btnColor,\n\t\t\t\tcolor           : labelColor || 'white'\n\t\t\t};\n\t\t\tbreak;\n\t}\n\treturn (\n\t\t<ShillyButton\n\t\t\tstyle={\n\t\t\t\t\tdisabled ? { ...commonStyles, ...btnStyle, ...disabledStyle, ...style } :\n\t\t\t\t\t{ ...commonStyles, ...btnStyle, ...style }\n\t\t\t}o\n\t\t\tonMouseEnter={toggleHover}\n\t\t\tonMouseLeave={toggleHover}\n\t\t\t{...props}\n\t\t\ttype=\"button\"\n\t\t\tonClick={\n\n\t\t\t\t\t!disabled ? onClick :\n\t\t\t\t\t() => {}\n\t\t\t}\n\t\t\tclassName={styles.btn}\n\t\t>\n\t\t\t{children || 'button'}\n\t\t</ShillyButton>\n\t);\n};\n\nconst ShillyButton = styled.div`\n  font-weight: bold;\n  transition: 200ms ease-out;\n  border-radius: var(--br-lg);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  cursor: pointer;\n  padding: 16px 24px;\n`;\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}